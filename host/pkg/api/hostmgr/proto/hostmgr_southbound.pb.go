// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: hostmgr/proto/hostmgr_southbound.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore PACKAGE_DIRECTORY_MATCH

package hostmgr_southbound

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigMode int32

const (
	ConfigMode_CONFIG_MODE_UNSPECIFIED ConfigMode = 0
	ConfigMode_CONFIG_MODE_STATIC      ConfigMode = 1
	ConfigMode_CONFIG_MODE_DYNAMIC     ConfigMode = 2
)

// Enum value maps for ConfigMode.
var (
	ConfigMode_name = map[int32]string{
		0: "CONFIG_MODE_UNSPECIFIED",
		1: "CONFIG_MODE_STATIC",
		2: "CONFIG_MODE_DYNAMIC",
	}
	ConfigMode_value = map[string]int32{
		"CONFIG_MODE_UNSPECIFIED": 0,
		"CONFIG_MODE_STATIC":      1,
		"CONFIG_MODE_DYNAMIC":     2,
	}
)

func (x ConfigMode) Enum() *ConfigMode {
	p := new(ConfigMode)
	*p = x
	return p
}

func (x ConfigMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigMode) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[0].Descriptor()
}

func (ConfigMode) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[0]
}

func (x ConfigMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigMode.Descriptor instead.
func (ConfigMode) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{0}
}

type InstanceState int32

const (
	InstanceState_INSTANCE_STATE_UNSPECIFIED InstanceState = 0 // unconfigured
	InstanceState_INSTANCE_STATE_INSTALLED   InstanceState = 2 // OS is installed, but hasn't been started
	InstanceState_INSTANCE_STATE_RUNNING     InstanceState = 3 // OS is Running
	InstanceState_INSTANCE_STATE_STOPPED     InstanceState = 4 // OS is Stopped
	InstanceState_INSTANCE_STATE_DELETED     InstanceState = 5 // OS should be Deleted
)

// Enum value maps for InstanceState.
var (
	InstanceState_name = map[int32]string{
		0: "INSTANCE_STATE_UNSPECIFIED",
		2: "INSTANCE_STATE_INSTALLED",
		3: "INSTANCE_STATE_RUNNING",
		4: "INSTANCE_STATE_STOPPED",
		5: "INSTANCE_STATE_DELETED",
	}
	InstanceState_value = map[string]int32{
		"INSTANCE_STATE_UNSPECIFIED": 0,
		"INSTANCE_STATE_INSTALLED":   2,
		"INSTANCE_STATE_RUNNING":     3,
		"INSTANCE_STATE_STOPPED":     4,
		"INSTANCE_STATE_DELETED":     5,
	}
)

func (x InstanceState) Enum() *InstanceState {
	p := new(InstanceState)
	*p = x
	return p
}

func (x InstanceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceState) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[1].Descriptor()
}

func (InstanceState) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[1]
}

func (x InstanceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceState.Descriptor instead.
func (InstanceState) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{1}
}

type InstanceStatus int32

const (
	InstanceStatus_INSTANCE_STATUS_UNSPECIFIED      InstanceStatus = 0
	InstanceStatus_INSTANCE_STATUS_BOOTING          InstanceStatus = 1
	InstanceStatus_INSTANCE_STATUS_BOOT_FAILED      InstanceStatus = 2
	InstanceStatus_INSTANCE_STATUS_PROVISIONING     InstanceStatus = 3
	InstanceStatus_INSTANCE_STATUS_PROVISIONED      InstanceStatus = 4
	InstanceStatus_INSTANCE_STATUS_PROVISION_FAILED InstanceStatus = 5
	InstanceStatus_INSTANCE_STATUS_RUNNING          InstanceStatus = 6
	InstanceStatus_INSTANCE_STATUS_ERROR            InstanceStatus = 7
	InstanceStatus_INSTANCE_STATUS_UPDATING         InstanceStatus = 9
	InstanceStatus_INSTANCE_STATUS_UPDATE_FAILED    InstanceStatus = 10
	InstanceStatus_INSTANCE_STATUS_INITIALIZING     InstanceStatus = 11
)

// Enum value maps for InstanceStatus.
var (
	InstanceStatus_name = map[int32]string{
		0:  "INSTANCE_STATUS_UNSPECIFIED",
		1:  "INSTANCE_STATUS_BOOTING",
		2:  "INSTANCE_STATUS_BOOT_FAILED",
		3:  "INSTANCE_STATUS_PROVISIONING",
		4:  "INSTANCE_STATUS_PROVISIONED",
		5:  "INSTANCE_STATUS_PROVISION_FAILED",
		6:  "INSTANCE_STATUS_RUNNING",
		7:  "INSTANCE_STATUS_ERROR",
		9:  "INSTANCE_STATUS_UPDATING",
		10: "INSTANCE_STATUS_UPDATE_FAILED",
		11: "INSTANCE_STATUS_INITIALIZING",
	}
	InstanceStatus_value = map[string]int32{
		"INSTANCE_STATUS_UNSPECIFIED":      0,
		"INSTANCE_STATUS_BOOTING":          1,
		"INSTANCE_STATUS_BOOT_FAILED":      2,
		"INSTANCE_STATUS_PROVISIONING":     3,
		"INSTANCE_STATUS_PROVISIONED":      4,
		"INSTANCE_STATUS_PROVISION_FAILED": 5,
		"INSTANCE_STATUS_RUNNING":          6,
		"INSTANCE_STATUS_ERROR":            7,
		"INSTANCE_STATUS_UPDATING":         9,
		"INSTANCE_STATUS_UPDATE_FAILED":    10,
		"INSTANCE_STATUS_INITIALIZING":     11,
	}
)

func (x InstanceStatus) Enum() *InstanceStatus {
	p := new(InstanceStatus)
	*p = x
	return p
}

func (x InstanceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[2].Descriptor()
}

func (InstanceStatus) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[2]
}

func (x InstanceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceStatus.Descriptor instead.
func (InstanceStatus) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{2}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
// buf:lint:ignore ENUM_PASCAL_CASE
type HostStatus_HostStatus int32

const (
	HostStatus_UNSPECIFIED     HostStatus_HostStatus = 0
	HostStatus_REGISTERING     HostStatus_HostStatus = 1
	HostStatus_BOOTING         HostStatus_HostStatus = 2
	HostStatus_BOOTFAILED      HostStatus_HostStatus = 3
	HostStatus_PROVISIONING    HostStatus_HostStatus = 4
	HostStatus_PROVISIONED     HostStatus_HostStatus = 5
	HostStatus_PROVISIONFAILED HostStatus_HostStatus = 6
	HostStatus_RUNNING         HostStatus_HostStatus = 7
	HostStatus_UPDATING        HostStatus_HostStatus = 8
	HostStatus_UPDATEFAILED    HostStatus_HostStatus = 9
	HostStatus_ERROR           HostStatus_HostStatus = 10
)

// Enum value maps for HostStatus_HostStatus.
var (
	HostStatus_HostStatus_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "REGISTERING",
		2:  "BOOTING",
		3:  "BOOTFAILED",
		4:  "PROVISIONING",
		5:  "PROVISIONED",
		6:  "PROVISIONFAILED",
		7:  "RUNNING",
		8:  "UPDATING",
		9:  "UPDATEFAILED",
		10: "ERROR",
	}
	HostStatus_HostStatus_value = map[string]int32{
		"UNSPECIFIED":     0,
		"REGISTERING":     1,
		"BOOTING":         2,
		"BOOTFAILED":      3,
		"PROVISIONING":    4,
		"PROVISIONED":     5,
		"PROVISIONFAILED": 6,
		"RUNNING":         7,
		"UPDATING":        8,
		"UPDATEFAILED":    9,
		"ERROR":           10,
	}
)

func (x HostStatus_HostStatus) Enum() *HostStatus_HostStatus {
	p := new(HostStatus_HostStatus)
	*p = x
	return p
}

func (x HostStatus_HostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostStatus_HostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[3].Descriptor()
}

func (HostStatus_HostStatus) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[3]
}

func (x HostStatus_HostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostStatus_HostStatus.Descriptor instead.
func (HostStatus_HostStatus) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{0, 0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
// buf:lint:ignore ENUM_PASCAL_CASE
type HostStatusResp_HostAction int32

const (
	HostStatusResp_NONE     HostStatusResp_HostAction = 0
	HostStatusResp_SHUTDOWN HostStatusResp_HostAction = 1
	HostStatusResp_RESTART  HostStatusResp_HostAction = 2
	HostStatusResp_UPDATING HostStatusResp_HostAction = 3
	HostStatusResp_RUNNING  HostStatusResp_HostAction = 4
)

// Enum value maps for HostStatusResp_HostAction.
var (
	HostStatusResp_HostAction_name = map[int32]string{
		0: "NONE",
		1: "SHUTDOWN",
		2: "RESTART",
		3: "UPDATING",
		4: "RUNNING",
	}
	HostStatusResp_HostAction_value = map[string]int32{
		"NONE":     0,
		"SHUTDOWN": 1,
		"RESTART":  2,
		"UPDATING": 3,
		"RUNNING":  4,
	}
)

func (x HostStatusResp_HostAction) Enum() *HostStatusResp_HostAction {
	p := new(HostStatusResp_HostAction)
	*p = x
	return p
}

func (x HostStatusResp_HostAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostStatusResp_HostAction) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[4].Descriptor()
}

func (HostStatusResp_HostAction) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[4]
}

func (x HostStatusResp_HostAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostStatusResp_HostAction.Descriptor instead.
func (HostStatusResp_HostAction) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{1, 0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
// buf:lint:ignore ENUM_PASCAL_CASE
type BmInfo_BmType int32

const (
	BmInfo_IPMI    BmInfo_BmType = 0
	BmInfo_REDFISH BmInfo_BmType = 1
	BmInfo_PDU     BmInfo_BmType = 2
	BmInfo_VPRO    BmInfo_BmType = 3
	BmInfo_FDO     BmInfo_BmType = 4
	BmInfo_NONE    BmInfo_BmType = 5
)

// Enum value maps for BmInfo_BmType.
var (
	BmInfo_BmType_name = map[int32]string{
		0: "IPMI",
		1: "REDFISH",
		2: "PDU",
		3: "VPRO",
		4: "FDO",
		5: "NONE",
	}
	BmInfo_BmType_value = map[string]int32{
		"IPMI":    0,
		"REDFISH": 1,
		"PDU":     2,
		"VPRO":    3,
		"FDO":     4,
		"NONE":    5,
	}
)

func (x BmInfo_BmType) Enum() *BmInfo_BmType {
	p := new(BmInfo_BmType)
	*p = x
	return p
}

func (x BmInfo_BmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BmInfo_BmType) Descriptor() protoreflect.EnumDescriptor {
	return file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[5].Descriptor()
}

func (BmInfo_BmType) Type() protoreflect.EnumType {
	return &file_hostmgr_proto_hostmgr_southbound_proto_enumTypes[5]
}

func (x BmInfo_BmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BmInfo_BmType.Descriptor instead.
func (BmInfo_BmType) EnumDescriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{23, 0}
}

type HostStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostStatus          HostStatus_HostStatus `protobuf:"varint,1,opt,name=host_status,json=hostStatus,proto3,enum=hostmgr_southbound_proto.HostStatus_HostStatus" json:"host_status,omitempty"`
	Details             string                `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	HumanReadableStatus string                `protobuf:"bytes,3,opt,name=human_readable_status,json=humanReadableStatus,proto3" json:"human_readable_status,omitempty"`
}

func (x *HostStatus) Reset() {
	*x = HostStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostStatus) ProtoMessage() {}

func (x *HostStatus) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostStatus.ProtoReflect.Descriptor instead.
func (*HostStatus) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{0}
}

func (x *HostStatus) GetHostStatus() HostStatus_HostStatus {
	if x != nil {
		return x.HostStatus
	}
	return HostStatus_UNSPECIFIED
}

func (x *HostStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *HostStatus) GetHumanReadableStatus() string {
	if x != nil {
		return x.HumanReadableStatus
	}
	return ""
}

type HostStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostAction HostStatusResp_HostAction `protobuf:"varint,1,opt,name=host_action,json=hostAction,proto3,enum=hostmgr_southbound_proto.HostStatusResp_HostAction" json:"host_action,omitempty"`
	Details    string                    `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *HostStatusResp) Reset() {
	*x = HostStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostStatusResp) ProtoMessage() {}

func (x *HostStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostStatusResp.ProtoReflect.Descriptor instead.
func (*HostStatusResp) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{1}
}

func (x *HostStatusResp) GetHostAction() HostStatusResp_HostAction {
	if x != nil {
		return x.HostAction
	}
	return HostStatusResp_NONE
}

func (x *HostStatusResp) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Metadata) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HwInfo    *HWInfo   `protobuf:"bytes,1,opt,name=hw_info,json=hwInfo,proto3" json:"hw_info,omitempty"`
	OsInfo    *OsInfo   `protobuf:"bytes,2,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`
	BmCtlInfo *BmInfo   `protobuf:"bytes,3,opt,name=bm_ctl_info,json=bmCtlInfo,proto3" json:"bm_ctl_info,omitempty"`
	BiosInfo  *BiosInfo `protobuf:"bytes,4,opt,name=bios_info,json=biosInfo,proto3" json:"bios_info,omitempty"`
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{3}
}

func (x *SystemInfo) GetHwInfo() *HWInfo {
	if x != nil {
		return x.HwInfo
	}
	return nil
}

func (x *SystemInfo) GetOsInfo() *OsInfo {
	if x != nil {
		return x.OsInfo
	}
	return nil
}

func (x *SystemInfo) GetBmCtlInfo() *BmInfo {
	if x != nil {
		return x.BmCtlInfo
	}
	return nil
}

func (x *SystemInfo) GetBiosInfo() *BiosInfo {
	if x != nil {
		return x.BiosInfo
	}
	return nil
}

type BiosInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ReleaseDate string `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Vendor      string `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *BiosInfo) Reset() {
	*x = BiosInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiosInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiosInfo) ProtoMessage() {}

func (x *BiosInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiosInfo.ProtoReflect.Descriptor instead.
func (*BiosInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{4}
}

func (x *BiosInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BiosInfo) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *BiosInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

type OsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kernel  *OsKernel  `protobuf:"bytes,1,opt,name=kernel,proto3" json:"kernel,omitempty"`
	Release *OsRelease `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
}

func (x *OsInfo) Reset() {
	*x = OsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsInfo) ProtoMessage() {}

func (x *OsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsInfo.ProtoReflect.Descriptor instead.
func (*OsInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{5}
}

func (x *OsInfo) GetKernel() *OsKernel {
	if x != nil {
		return x.Kernel
	}
	return nil
}

func (x *OsInfo) GetRelease() *OsRelease {
	if x != nil {
		return x.Release
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{6}
}

func (x *Config) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Config) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OsKernel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Config  []*Config `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty"`
}

func (x *OsKernel) Reset() {
	*x = OsKernel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsKernel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsKernel) ProtoMessage() {}

func (x *OsKernel) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsKernel.ProtoReflect.Descriptor instead.
func (*OsKernel) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{7}
}

func (x *OsKernel) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OsKernel) GetConfig() []*Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type OsRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version  string      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Metadata []*Metadata `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *OsRelease) Reset() {
	*x = OsRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsRelease) ProtoMessage() {}

func (x *OsRelease) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsRelease.ProtoReflect.Descriptor instead.
func (*OsRelease) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{8}
}

func (x *OsRelease) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OsRelease) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OsRelease) GetMetadata() []*Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disk     []*SystemDisk `protobuf:"bytes,1,rep,name=disk,proto3" json:"disk,omitempty"`
	Features []string      `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{9}
}

func (x *Storage) GetDisk() []*SystemDisk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *Storage) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type HWInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNum   string     `protobuf:"bytes,1,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	ProductName string     `protobuf:"bytes,9,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Cpu         *SystemCPU `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// Deprecated: Marked as deprecated in hostmgr/proto/hostmgr_southbound.proto.
	GpuDeprecated *SystemGPU       `protobuf:"bytes,3,opt,name=gpu_deprecated,json=gpuDeprecated,proto3" json:"gpu_deprecated,omitempty"`
	Memory        *SystemMemory    `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage       *Storage         `protobuf:"bytes,5,opt,name=storage,proto3" json:"storage,omitempty"`
	Network       []*SystemNetwork `protobuf:"bytes,6,rep,name=network,proto3" json:"network,omitempty"`
	Pci           []*SystemPCI     `protobuf:"bytes,7,rep,name=pci,proto3" json:"pci,omitempty"`
	Usb           []*SystemUSB     `protobuf:"bytes,8,rep,name=usb,proto3" json:"usb,omitempty"`
	Gpu           []*SystemGPU     `protobuf:"bytes,10,rep,name=gpu,proto3" json:"gpu,omitempty"`
}

func (x *HWInfo) Reset() {
	*x = HWInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWInfo) ProtoMessage() {}

func (x *HWInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWInfo.ProtoReflect.Descriptor instead.
func (*HWInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{10}
}

func (x *HWInfo) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *HWInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *HWInfo) GetCpu() *SystemCPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

// Deprecated: Marked as deprecated in hostmgr/proto/hostmgr_southbound.proto.
func (x *HWInfo) GetGpuDeprecated() *SystemGPU {
	if x != nil {
		return x.GpuDeprecated
	}
	return nil
}

func (x *HWInfo) GetMemory() *SystemMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *HWInfo) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *HWInfo) GetNetwork() []*SystemNetwork {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *HWInfo) GetPci() []*SystemPCI {
	if x != nil {
		return x.Pci
	}
	return nil
}

func (x *HWInfo) GetUsb() []*SystemUSB {
	if x != nil {
		return x.Usb
	}
	return nil
}

func (x *HWInfo) GetGpu() []*SystemGPU {
	if x != nil {
		return x.Gpu
	}
	return nil
}

type SystemCPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch        string       `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
	Vendor      string       `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model       string       `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Sockets     uint32       `protobuf:"varint,4,opt,name=sockets,proto3" json:"sockets,omitempty"`
	Cores       uint32       `protobuf:"varint,5,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads     uint32       `protobuf:"varint,6,opt,name=threads,proto3" json:"threads,omitempty"`
	Features    []string     `protobuf:"bytes,7,rep,name=features,proto3" json:"features,omitempty"`
	CpuTopology *CPUTopology `protobuf:"bytes,8,opt,name=cpu_topology,json=cpuTopology,proto3" json:"cpu_topology,omitempty"`
}

func (x *SystemCPU) Reset() {
	*x = SystemCPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCPU) ProtoMessage() {}

func (x *SystemCPU) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCPU.ProtoReflect.Descriptor instead.
func (*SystemCPU) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{11}
}

func (x *SystemCPU) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *SystemCPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *SystemCPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SystemCPU) GetSockets() uint32 {
	if x != nil {
		return x.Sockets
	}
	return 0
}

func (x *SystemCPU) GetCores() uint32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *SystemCPU) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *SystemCPU) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SystemCPU) GetCpuTopology() *CPUTopology {
	if x != nil {
		return x.CpuTopology
	}
	return nil
}

type SystemMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SystemMemory) Reset() {
	*x = SystemMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMemory) ProtoMessage() {}

func (x *SystemMemory) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMemory.ProtoReflect.Descriptor instead.
func (*SystemMemory) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{12}
}

func (x *SystemMemory) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SystemDisk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Vendor       string `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model        string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Size         uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Wwid         string `protobuf:"bytes,6,opt,name=wwid,proto3" json:"wwid,omitempty"`
}

func (x *SystemDisk) Reset() {
	*x = SystemDisk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDisk) ProtoMessage() {}

func (x *SystemDisk) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDisk.ProtoReflect.Descriptor instead.
func (*SystemDisk) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{13}
}

func (x *SystemDisk) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *SystemDisk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemDisk) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *SystemDisk) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SystemDisk) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SystemDisk) GetWwid() string {
	if x != nil {
		return x.Wwid
	}
	return ""
}

type SystemGPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PciId       string   `protobuf:"bytes,1,opt,name=pci_id,json=pciId,proto3" json:"pci_id,omitempty"`
	Product     string   `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Vendor      string   `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Name        string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"` // human-readable description of GPU
	Features    []string `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *SystemGPU) Reset() {
	*x = SystemGPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemGPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemGPU) ProtoMessage() {}

func (x *SystemGPU) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemGPU.ProtoReflect.Descriptor instead.
func (*SystemGPU) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{14}
}

func (x *SystemGPU) GetPciId() string {
	if x != nil {
		return x.PciId
	}
	return ""
}

func (x *SystemGPU) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *SystemGPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *SystemGPU) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemGPU) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SystemGPU) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type SystemNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PciId               string       `protobuf:"bytes,2,opt,name=pci_id,json=pciId,proto3" json:"pci_id,omitempty"`
	Mac                 string       `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	LinkState           bool         `protobuf:"varint,4,opt,name=link_state,json=linkState,proto3" json:"link_state,omitempty"`
	CurrentSpeed        uint64       `protobuf:"varint,5,opt,name=current_speed,json=currentSpeed,proto3" json:"current_speed,omitempty"`
	CurrentDuplex       string       `protobuf:"bytes,6,opt,name=current_duplex,json=currentDuplex,proto3" json:"current_duplex,omitempty"`
	SupportedLinkMode   []string     `protobuf:"bytes,7,rep,name=supported_link_mode,json=supportedLinkMode,proto3" json:"supported_link_mode,omitempty"`
	AdvertisingLinkMode []string     `protobuf:"bytes,8,rep,name=advertising_link_mode,json=advertisingLinkMode,proto3" json:"advertising_link_mode,omitempty"`
	Features            []string     `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
	Sriovenabled        bool         `protobuf:"varint,10,opt,name=sriovenabled,proto3" json:"sriovenabled,omitempty"`
	Sriovnumvfs         uint32       `protobuf:"varint,11,opt,name=sriovnumvfs,proto3" json:"sriovnumvfs,omitempty"`
	SriovVfsTotal       uint32       `protobuf:"varint,20,opt,name=sriov_vfs_total,json=sriovVfsTotal,proto3" json:"sriov_vfs_total,omitempty"`
	PeerName            string       `protobuf:"bytes,12,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	PeerDescription     string       `protobuf:"bytes,13,opt,name=peer_description,json=peerDescription,proto3" json:"peer_description,omitempty"`
	PeerMac             string       `protobuf:"bytes,14,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	PeerMgmtIp          string       `protobuf:"bytes,15,opt,name=peer_mgmt_ip,json=peerMgmtIp,proto3" json:"peer_mgmt_ip,omitempty"`
	PeerPort            string       `protobuf:"bytes,16,opt,name=peer_port,json=peerPort,proto3" json:"peer_port,omitempty"`
	IpAddresses         []*IPAddress `protobuf:"bytes,17,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"` // NIC can report multiple IP addresses for each NIC
	Mtu                 uint32       `protobuf:"varint,18,opt,name=mtu,proto3" json:"mtu,omitempty"`                                   // units are bytes
	BmcNet              bool         `protobuf:"varint,19,opt,name=bmc_net,json=bmcNet,proto3" json:"bmc_net,omitempty"`               // whether or not this is a bmc NIC
}

func (x *SystemNetwork) Reset() {
	*x = SystemNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNetwork) ProtoMessage() {}

func (x *SystemNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNetwork.ProtoReflect.Descriptor instead.
func (*SystemNetwork) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{15}
}

func (x *SystemNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemNetwork) GetPciId() string {
	if x != nil {
		return x.PciId
	}
	return ""
}

func (x *SystemNetwork) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *SystemNetwork) GetLinkState() bool {
	if x != nil {
		return x.LinkState
	}
	return false
}

func (x *SystemNetwork) GetCurrentSpeed() uint64 {
	if x != nil {
		return x.CurrentSpeed
	}
	return 0
}

func (x *SystemNetwork) GetCurrentDuplex() string {
	if x != nil {
		return x.CurrentDuplex
	}
	return ""
}

func (x *SystemNetwork) GetSupportedLinkMode() []string {
	if x != nil {
		return x.SupportedLinkMode
	}
	return nil
}

func (x *SystemNetwork) GetAdvertisingLinkMode() []string {
	if x != nil {
		return x.AdvertisingLinkMode
	}
	return nil
}

func (x *SystemNetwork) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SystemNetwork) GetSriovenabled() bool {
	if x != nil {
		return x.Sriovenabled
	}
	return false
}

func (x *SystemNetwork) GetSriovnumvfs() uint32 {
	if x != nil {
		return x.Sriovnumvfs
	}
	return 0
}

func (x *SystemNetwork) GetSriovVfsTotal() uint32 {
	if x != nil {
		return x.SriovVfsTotal
	}
	return 0
}

func (x *SystemNetwork) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SystemNetwork) GetPeerDescription() string {
	if x != nil {
		return x.PeerDescription
	}
	return ""
}

func (x *SystemNetwork) GetPeerMac() string {
	if x != nil {
		return x.PeerMac
	}
	return ""
}

func (x *SystemNetwork) GetPeerMgmtIp() string {
	if x != nil {
		return x.PeerMgmtIp
	}
	return ""
}

func (x *SystemNetwork) GetPeerPort() string {
	if x != nil {
		return x.PeerPort
	}
	return ""
}

func (x *SystemNetwork) GetIpAddresses() []*IPAddress {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *SystemNetwork) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *SystemNetwork) GetBmcNet() bool {
	if x != nil {
		return x.BmcNet
	}
	return false
}

type CPUTopology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sockets []*Socket `protobuf:"bytes,1,rep,name=sockets,proto3" json:"sockets,omitempty"` // a list of CPU socket descriptions
}

func (x *CPUTopology) Reset() {
	*x = CPUTopology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUTopology) ProtoMessage() {}

func (x *CPUTopology) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUTopology.ProtoReflect.Descriptor instead.
func (*CPUTopology) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{16}
}

func (x *CPUTopology) GetSockets() []*Socket {
	if x != nil {
		return x.Sockets
	}
	return nil
}

type Socket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SocketId   uint32       `protobuf:"varint,1,opt,name=socket_id,json=socketId,proto3" json:"socket_id,omitempty"`
	CoreGroups []*CoreGroup `protobuf:"bytes,2,rep,name=core_groups,json=coreGroups,proto3" json:"core_groups,omitempty"` // a list of CPU core groups, categorized by CPU core type
}

func (x *Socket) Reset() {
	*x = Socket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Socket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Socket) ProtoMessage() {}

func (x *Socket) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Socket.ProtoReflect.Descriptor instead.
func (*Socket) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{17}
}

func (x *Socket) GetSocketId() uint32 {
	if x != nil {
		return x.SocketId
	}
	return 0
}

func (x *Socket) GetCoreGroups() []*CoreGroup {
	if x != nil {
		return x.CoreGroups
	}
	return nil
}

type CoreGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreType string   `protobuf:"bytes,1,opt,name=core_type,json=coreType,proto3" json:"core_type,omitempty"`         // type of CPU cores (e.g., P-Core or E-Core)
	CoreList []uint32 `protobuf:"varint,3,rep,packed,name=core_list,json=coreList,proto3" json:"core_list,omitempty"` // a list of CPU cores in the group
}

func (x *CoreGroup) Reset() {
	*x = CoreGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreGroup) ProtoMessage() {}

func (x *CoreGroup) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreGroup.ProtoReflect.Descriptor instead.
func (*CoreGroup) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{18}
}

func (x *CoreGroup) GetCoreType() string {
	if x != nil {
		return x.CoreType
	}
	return ""
}

func (x *CoreGroup) GetCoreList() []uint32 {
	if x != nil {
		return x.CoreList
	}
	return nil
}

type IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress         string     `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"` // Just an IP Address of the interface (e.g., 192.168.1.12)
	NetworkPrefixBits int32      `protobuf:"varint,2,opt,name=network_prefix_bits,json=networkPrefixBits,proto3" json:"network_prefix_bits,omitempty"`
	ConfigMode        ConfigMode `protobuf:"varint,4,opt,name=config_mode,json=configMode,proto3,enum=hostmgr_southbound_proto.ConfigMode" json:"config_mode,omitempty"` // this is derived from the FLAG and lifetime associated with the IPAddress
}

func (x *IPAddress) Reset() {
	*x = IPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddress) ProtoMessage() {}

func (x *IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddress.ProtoReflect.Descriptor instead.
func (*IPAddress) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{19}
}

func (x *IPAddress) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IPAddress) GetNetworkPrefixBits() int32 {
	if x != nil {
		return x.NetworkPrefixBits
	}
	return 0
}

func (x *IPAddress) GetConfigMode() ConfigMode {
	if x != nil {
		return x.ConfigMode
	}
	return ConfigMode_CONFIG_MODE_UNSPECIFIED
}

type SystemPCI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevClass string `protobuf:"bytes,1,opt,name=dev_class,json=devClass,proto3" json:"dev_class,omitempty"`
}

func (x *SystemPCI) Reset() {
	*x = SystemPCI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemPCI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPCI) ProtoMessage() {}

func (x *SystemPCI) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPCI.ProtoReflect.Descriptor instead.
func (*SystemPCI) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{20}
}

func (x *SystemPCI) GetDevClass() string {
	if x != nil {
		return x.DevClass
	}
	return ""
}

type Interfaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class string `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
}

func (x *Interfaces) Reset() {
	*x = Interfaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interfaces) ProtoMessage() {}

func (x *Interfaces) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interfaces.ProtoReflect.Descriptor instead.
func (*Interfaces) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{21}
}

func (x *Interfaces) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type SystemUSB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class       string        `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
	Idvendor    string        `protobuf:"bytes,2,opt,name=idvendor,proto3" json:"idvendor,omitempty"`
	Idproduct   string        `protobuf:"bytes,3,opt,name=idproduct,proto3" json:"idproduct,omitempty"`
	Bus         uint32        `protobuf:"varint,4,opt,name=bus,proto3" json:"bus,omitempty"`
	Addr        uint32        `protobuf:"varint,5,opt,name=addr,proto3" json:"addr,omitempty"`
	Description string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Serial      string        `protobuf:"bytes,7,opt,name=serial,proto3" json:"serial,omitempty"`
	Interfaces  []*Interfaces `protobuf:"bytes,8,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
}

func (x *SystemUSB) Reset() {
	*x = SystemUSB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemUSB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUSB) ProtoMessage() {}

func (x *SystemUSB) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUSB.ProtoReflect.Descriptor instead.
func (*SystemUSB) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{22}
}

func (x *SystemUSB) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *SystemUSB) GetIdvendor() string {
	if x != nil {
		return x.Idvendor
	}
	return ""
}

func (x *SystemUSB) GetIdproduct() string {
	if x != nil {
		return x.Idproduct
	}
	return ""
}

func (x *SystemUSB) GetBus() uint32 {
	if x != nil {
		return x.Bus
	}
	return 0
}

func (x *SystemUSB) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *SystemUSB) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SystemUSB) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *SystemUSB) GetInterfaces() []*Interfaces {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type BmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BmType  BmInfo_BmType `protobuf:"varint,1,opt,name=bm_type,json=bmType,proto3,enum=hostmgr_southbound_proto.BmInfo_BmType" json:"bm_type,omitempty"`
	BmcInfo *BmcInfo      `protobuf:"bytes,2,opt,name=bmc_info,json=bmcInfo,proto3" json:"bmc_info,omitempty"`
}

func (x *BmInfo) Reset() {
	*x = BmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BmInfo) ProtoMessage() {}

func (x *BmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BmInfo.ProtoReflect.Descriptor instead.
func (*BmInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{23}
}

func (x *BmInfo) GetBmType() BmInfo_BmType {
	if x != nil {
		return x.BmType
	}
	return BmInfo_IPMI
}

func (x *BmInfo) GetBmcInfo() *BmcInfo {
	if x != nil {
		return x.BmcInfo
	}
	return nil
}

type BmcInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BmIp       string `protobuf:"bytes,1,opt,name=bm_ip,json=bmIp,proto3" json:"bm_ip,omitempty"`
	BmUsername string `protobuf:"bytes,2,opt,name=bm_username,json=bmUsername,proto3" json:"bm_username,omitempty"`
	BmPassword string `protobuf:"bytes,3,opt,name=bm_password,json=bmPassword,proto3" json:"bm_password,omitempty"`
}

func (x *BmcInfo) Reset() {
	*x = BmcInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BmcInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BmcInfo) ProtoMessage() {}

func (x *BmcInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BmcInfo.ProtoReflect.Descriptor instead.
func (*BmcInfo) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{24}
}

func (x *BmcInfo) GetBmIp() string {
	if x != nil {
		return x.BmIp
	}
	return ""
}

func (x *BmcInfo) GetBmUsername() string {
	if x != nil {
		return x.BmUsername
	}
	return ""
}

func (x *BmcInfo) GetBmPassword() string {
	if x != nil {
		return x.BmPassword
	}
	return ""
}

// UpdateHostStatusByHostGuidParameters holds parameters to UpdateHostStatusByHostGuid
type UpdateHostStatusByHostGuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGuid   string      `protobuf:"bytes,1,opt,name=host_guid,json=hostGuid,proto3" json:"host_guid,omitempty"`
	HostStatus *HostStatus `protobuf:"bytes,2,opt,name=host_status,json=hostStatus,proto3" json:"host_status,omitempty"`
}

func (x *UpdateHostStatusByHostGuidRequest) Reset() {
	*x = UpdateHostStatusByHostGuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostStatusByHostGuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostStatusByHostGuidRequest) ProtoMessage() {}

func (x *UpdateHostStatusByHostGuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostStatusByHostGuidRequest.ProtoReflect.Descriptor instead.
func (*UpdateHostStatusByHostGuidRequest) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateHostStatusByHostGuidRequest) GetHostGuid() string {
	if x != nil {
		return x.HostGuid
	}
	return ""
}

func (x *UpdateHostStatusByHostGuidRequest) GetHostStatus() *HostStatus {
	if x != nil {
		return x.HostStatus
	}
	return nil
}

type UpdateHostSystemInfoByGUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGuid   string      `protobuf:"bytes,1,opt,name=host_guid,json=hostGuid,proto3" json:"host_guid,omitempty"`
	SystemInfo *SystemInfo `protobuf:"bytes,2,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
}

func (x *UpdateHostSystemInfoByGUIDRequest) Reset() {
	*x = UpdateHostSystemInfoByGUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostSystemInfoByGUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostSystemInfoByGUIDRequest) ProtoMessage() {}

func (x *UpdateHostSystemInfoByGUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostSystemInfoByGUIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateHostSystemInfoByGUIDRequest) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateHostSystemInfoByGUIDRequest) GetHostGuid() string {
	if x != nil {
		return x.HostGuid
	}
	return ""
}

func (x *UpdateHostSystemInfoByGUIDRequest) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type UpdateHostSystemInfoByGUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHostSystemInfoByGUIDResponse) Reset() {
	*x = UpdateHostSystemInfoByGUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostSystemInfoByGUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostSystemInfoByGUIDResponse) ProtoMessage() {}

func (x *UpdateHostSystemInfoByGUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostSystemInfoByGUIDResponse.ProtoReflect.Descriptor instead.
func (*UpdateHostSystemInfoByGUIDResponse) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{27}
}

type UpdateInstanceStateStatusByHostGUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGuid             string         `protobuf:"bytes,1,opt,name=host_guid,json=hostGuid,proto3" json:"host_guid,omitempty"`                                                                 // Host GUID
	InstanceStatus       InstanceStatus `protobuf:"varint,2,opt,name=instance_status,json=instanceStatus,proto3,enum=hostmgr_southbound_proto.InstanceStatus" json:"instance_status,omitempty"` // Instance's Status
	InstanceState        InstanceState  `protobuf:"varint,3,opt,name=instance_state,json=instanceState,proto3,enum=hostmgr_southbound_proto.InstanceState" json:"instance_state,omitempty"`     // Instance's last State as seen by the PS/ENA
	ProviderStatusDetail string         `protobuf:"bytes,4,opt,name=provider_status_detail,json=providerStatusDetail,proto3" json:"provider_status_detail,omitempty"`                           // Details of the current status of the Instance
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) Reset() {
	*x = UpdateInstanceStateStatusByHostGUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceStateStatusByHostGUIDRequest) ProtoMessage() {}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceStateStatusByHostGUIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceStateStatusByHostGUIDRequest) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) GetHostGuid() string {
	if x != nil {
		return x.HostGuid
	}
	return ""
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) GetInstanceStatus() InstanceStatus {
	if x != nil {
		return x.InstanceStatus
	}
	return InstanceStatus_INSTANCE_STATUS_UNSPECIFIED
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) GetInstanceState() InstanceState {
	if x != nil {
		return x.InstanceState
	}
	return InstanceState_INSTANCE_STATE_UNSPECIFIED
}

func (x *UpdateInstanceStateStatusByHostGUIDRequest) GetProviderStatusDetail() string {
	if x != nil {
		return x.ProviderStatusDetail
	}
	return ""
}

type UpdateInstanceStateStatusByHostGUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInstanceStateStatusByHostGUIDResponse) Reset() {
	*x = UpdateInstanceStateStatusByHostGUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceStateStatusByHostGUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceStateStatusByHostGUIDResponse) ProtoMessage() {}

func (x *UpdateInstanceStateStatusByHostGUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceStateStatusByHostGUIDResponse.ProtoReflect.Descriptor instead.
func (*UpdateInstanceStateStatusByHostGUIDResponse) Descriptor() ([]byte, []int) {
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP(), []int{29}
}

var File_hostmgr_proto_hostmgr_southbound_proto protoreflect.FileDescriptor

var file_hostmgr_proto_hostmgr_southbound_proto_rawDesc = []byte{
	0x0a, 0x26, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67,
	0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x02, 0x0a, 0x0a,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x61,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0b,
	0x48, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f,
	0x4f, 0x54, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0a, 0x22, 0xd0, 0x01, 0x0a, 0x0e, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a,
	0x0b, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4d,
	0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x32, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x85, 0x02, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x39, 0x0a, 0x07, 0x68, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x57, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x68, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x07, 0x6f,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0b, 0x62, 0x6d, 0x5f, 0x63, 0x74, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62,
	0x6d, 0x43, 0x74, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x09, 0x62, 0x69, 0x6f, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x62, 0x69, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x08, 0x42, 0x69,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x18, 0x80,
	0x01, 0xd0, 0x01, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44, 0x72, 0x42, 0x18, 0x80, 0x01, 0x32, 0x3a, 0x5e,
	0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d, 0x29, 0x5b,
	0x2f, 0x5d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30,
	0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x5b, 0x2f, 0x5d, 0x28, 0x31, 0x39,
	0x7c, 0x32, 0x30, 0x29, 0x5c, 0x64, 0x5c, 0x64, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x18, 0x28, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x83, 0x01,
	0x0a, 0x06, 0x4f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d,
	0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x73, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x06, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x68, 0x0a, 0x08, 0x4f, 0x73, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x89, 0x01, 0x0a, 0x09, 0x4f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0x80, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0x80, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x07, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73,
	0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xca, 0x04, 0x0a,
	0x06, 0x48, 0x57, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x12, 0x2b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x50, 0x55, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x4e, 0x0a, 0x0e, 0x67, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x50,
	0x55, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x67, 0x70, 0x75, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73,
	0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x41, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x35, 0x0a, 0x03, 0x70, 0x63, 0x69, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x43, 0x49, 0x52, 0x03, 0x70, 0x63, 0x69, 0x12, 0x35, 0x0a, 0x03, 0x75,
	0x73, 0x62, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d,
	0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x53, 0x42, 0x52, 0x03, 0x75,
	0x73, 0x62, 0x12, 0x35, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x47, 0x50, 0x55, 0x52, 0x03, 0x67, 0x70, 0x75, 0x22, 0xb6, 0x02, 0x0a, 0x09, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x50, 0x55, 0x12, 0x1c, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52,
	0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x70, 0x75, 0x5f,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x50, 0x55, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x22, 0x2b, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xcf, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x2d,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12,
	0x1e, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x77, 0x77, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x04, 0x77, 0x77, 0x69,
	0x64, 0x22, 0xe2, 0x01, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x47, 0x50, 0x55, 0x12,
	0x24, 0x0a, 0x06, 0x70, 0x63, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x01, 0x18, 0x80, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x05,
	0x70, 0x63, 0x69, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0x80, 0x01, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08,
	0x10, 0x01, 0x18, 0x80, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x96, 0x06, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x70, 0x63, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0x80, 0x01, 0x52, 0x05, 0x70, 0x63, 0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x6d, 0x61, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x72,
	0x69, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x73, 0x72, 0x69, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x72, 0x69, 0x6f, 0x76, 0x6e, 0x75, 0x6d, 0x76, 0x66, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x72, 0x69, 0x6f, 0x76, 0x6e, 0x75, 0x6d, 0x76, 0x66, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x72, 0x69, 0x6f, 0x76, 0x5f, 0x76, 0x66, 0x73, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x72, 0x69, 0x6f, 0x76,
	0x56, 0x66, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x10, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0x80, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x12, 0x2a, 0x0a, 0x0c, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6d, 0x67, 0x6d, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x4d,
	0x67, 0x6d, 0x74, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0x80, 0x01, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x0c,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6d, 0x63, 0x5f, 0x6e, 0x65,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x6d, 0x63, 0x4e, 0x65, 0x74, 0x22,
	0x53, 0x0a, 0x0b, 0x43, 0x50, 0x55, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x44,
	0x0a, 0x07, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x22, 0x75, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0b, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x0a, 0x63, 0x6f, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x51, 0x0a, 0x09, 0x43,
	0x6f, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x18, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6,
	0x01, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0a,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x10, 0x80, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x69, 0x74, 0x73,
	0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x50, 0x43, 0x49, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80,
	0x01, 0x52, 0x08, 0x64, 0x65, 0x76, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x0a, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0x80, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x09, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x53, 0x42, 0x12, 0x1e, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x69, 0x64, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0x80, 0x01, 0x52, 0x08, 0x69, 0x64, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x26, 0x0a,
	0x09, 0x69, 0x64, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x09, 0x69, 0x64, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x62, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x2a, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80,
	0x01, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22,
	0xd1, 0x01, 0x0a, 0x06, 0x42, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x07, 0x62, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x62, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a,
	0x08, 0x62, 0x6d, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6d, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x62, 0x6d, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x07, 0x42,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x4d, 0x49, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x44, 0x46, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x44, 0x55, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x50, 0x52, 0x4f, 0x10, 0x03,
	0x12, 0x07, 0x0a, 0x03, 0x46, 0x44, 0x4f, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x05, 0x22, 0x7e, 0x0a, 0x07, 0x42, 0x6d, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x05, 0x62, 0x6d, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x04, 0x62, 0x6d, 0x49, 0x70, 0x12, 0x29, 0x0a,
	0x0b, 0x62, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0a, 0x62, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x6d, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0a, 0x62, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42,
	0x09, 0x72, 0x07, 0x10, 0x01, 0x28, 0x24, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x28, 0x24, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x02,
	0x0a, 0x2a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x28, 0x24, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2d,
	0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x5a, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x02, 0x2a, 0xa1, 0x01, 0x0a, 0x0d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a, 0xf3, 0x02,
	0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07,
	0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x21,
	0x0a, 0x1d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x0a, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e,
	0x47, 0x10, 0x0b, 0x32, 0xe4, 0x03, 0x0a, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x12,
	0x85, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x3b,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0xb4, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x55, 0x49, 0x44, 0x12,
	0x44, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99,
	0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44, 0x12, 0x3b, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x47,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x3b,
	0x68, 0x6f, 0x73, 0x74, 0x6d, 0x67, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hostmgr_proto_hostmgr_southbound_proto_rawDescOnce sync.Once
	file_hostmgr_proto_hostmgr_southbound_proto_rawDescData = file_hostmgr_proto_hostmgr_southbound_proto_rawDesc
)

func file_hostmgr_proto_hostmgr_southbound_proto_rawDescGZIP() []byte {
	file_hostmgr_proto_hostmgr_southbound_proto_rawDescOnce.Do(func() {
		file_hostmgr_proto_hostmgr_southbound_proto_rawDescData = protoimpl.X.CompressGZIP(file_hostmgr_proto_hostmgr_southbound_proto_rawDescData)
	})
	return file_hostmgr_proto_hostmgr_southbound_proto_rawDescData
}

var file_hostmgr_proto_hostmgr_southbound_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_hostmgr_proto_hostmgr_southbound_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_hostmgr_proto_hostmgr_southbound_proto_goTypes = []interface{}{
	(ConfigMode)(0),                            // 0: hostmgr_southbound_proto.ConfigMode
	(InstanceState)(0),                         // 1: hostmgr_southbound_proto.InstanceState
	(InstanceStatus)(0),                        // 2: hostmgr_southbound_proto.InstanceStatus
	(HostStatus_HostStatus)(0),                 // 3: hostmgr_southbound_proto.HostStatus.Host_status
	(HostStatusResp_HostAction)(0),             // 4: hostmgr_southbound_proto.HostStatusResp.Host_action
	(BmInfo_BmType)(0),                         // 5: hostmgr_southbound_proto.BmInfo.Bm_type
	(*HostStatus)(nil),                         // 6: hostmgr_southbound_proto.HostStatus
	(*HostStatusResp)(nil),                     // 7: hostmgr_southbound_proto.HostStatusResp
	(*Metadata)(nil),                           // 8: hostmgr_southbound_proto.Metadata
	(*SystemInfo)(nil),                         // 9: hostmgr_southbound_proto.SystemInfo
	(*BiosInfo)(nil),                           // 10: hostmgr_southbound_proto.BiosInfo
	(*OsInfo)(nil),                             // 11: hostmgr_southbound_proto.OsInfo
	(*Config)(nil),                             // 12: hostmgr_southbound_proto.Config
	(*OsKernel)(nil),                           // 13: hostmgr_southbound_proto.OsKernel
	(*OsRelease)(nil),                          // 14: hostmgr_southbound_proto.OsRelease
	(*Storage)(nil),                            // 15: hostmgr_southbound_proto.Storage
	(*HWInfo)(nil),                             // 16: hostmgr_southbound_proto.HWInfo
	(*SystemCPU)(nil),                          // 17: hostmgr_southbound_proto.SystemCPU
	(*SystemMemory)(nil),                       // 18: hostmgr_southbound_proto.SystemMemory
	(*SystemDisk)(nil),                         // 19: hostmgr_southbound_proto.SystemDisk
	(*SystemGPU)(nil),                          // 20: hostmgr_southbound_proto.SystemGPU
	(*SystemNetwork)(nil),                      // 21: hostmgr_southbound_proto.SystemNetwork
	(*CPUTopology)(nil),                        // 22: hostmgr_southbound_proto.CPUTopology
	(*Socket)(nil),                             // 23: hostmgr_southbound_proto.Socket
	(*CoreGroup)(nil),                          // 24: hostmgr_southbound_proto.CoreGroup
	(*IPAddress)(nil),                          // 25: hostmgr_southbound_proto.IPAddress
	(*SystemPCI)(nil),                          // 26: hostmgr_southbound_proto.SystemPCI
	(*Interfaces)(nil),                         // 27: hostmgr_southbound_proto.Interfaces
	(*SystemUSB)(nil),                          // 28: hostmgr_southbound_proto.SystemUSB
	(*BmInfo)(nil),                             // 29: hostmgr_southbound_proto.BmInfo
	(*BmcInfo)(nil),                            // 30: hostmgr_southbound_proto.BmcInfo
	(*UpdateHostStatusByHostGuidRequest)(nil),  // 31: hostmgr_southbound_proto.UpdateHostStatusByHostGuidRequest
	(*UpdateHostSystemInfoByGUIDRequest)(nil),  // 32: hostmgr_southbound_proto.UpdateHostSystemInfoByGUIDRequest
	(*UpdateHostSystemInfoByGUIDResponse)(nil), // 33: hostmgr_southbound_proto.UpdateHostSystemInfoByGUIDResponse
	(*UpdateInstanceStateStatusByHostGUIDRequest)(nil),  // 34: hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDRequest
	(*UpdateInstanceStateStatusByHostGUIDResponse)(nil), // 35: hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDResponse
}
var file_hostmgr_proto_hostmgr_southbound_proto_depIdxs = []int32{
	3,  // 0: hostmgr_southbound_proto.HostStatus.host_status:type_name -> hostmgr_southbound_proto.HostStatus.Host_status
	4,  // 1: hostmgr_southbound_proto.HostStatusResp.host_action:type_name -> hostmgr_southbound_proto.HostStatusResp.Host_action
	16, // 2: hostmgr_southbound_proto.SystemInfo.hw_info:type_name -> hostmgr_southbound_proto.HWInfo
	11, // 3: hostmgr_southbound_proto.SystemInfo.os_info:type_name -> hostmgr_southbound_proto.OsInfo
	29, // 4: hostmgr_southbound_proto.SystemInfo.bm_ctl_info:type_name -> hostmgr_southbound_proto.BmInfo
	10, // 5: hostmgr_southbound_proto.SystemInfo.bios_info:type_name -> hostmgr_southbound_proto.BiosInfo
	13, // 6: hostmgr_southbound_proto.OsInfo.kernel:type_name -> hostmgr_southbound_proto.OsKernel
	14, // 7: hostmgr_southbound_proto.OsInfo.release:type_name -> hostmgr_southbound_proto.OsRelease
	12, // 8: hostmgr_southbound_proto.OsKernel.config:type_name -> hostmgr_southbound_proto.Config
	8,  // 9: hostmgr_southbound_proto.OsRelease.metadata:type_name -> hostmgr_southbound_proto.Metadata
	19, // 10: hostmgr_southbound_proto.Storage.disk:type_name -> hostmgr_southbound_proto.SystemDisk
	17, // 11: hostmgr_southbound_proto.HWInfo.cpu:type_name -> hostmgr_southbound_proto.SystemCPU
	20, // 12: hostmgr_southbound_proto.HWInfo.gpu_deprecated:type_name -> hostmgr_southbound_proto.SystemGPU
	18, // 13: hostmgr_southbound_proto.HWInfo.memory:type_name -> hostmgr_southbound_proto.SystemMemory
	15, // 14: hostmgr_southbound_proto.HWInfo.storage:type_name -> hostmgr_southbound_proto.Storage
	21, // 15: hostmgr_southbound_proto.HWInfo.network:type_name -> hostmgr_southbound_proto.SystemNetwork
	26, // 16: hostmgr_southbound_proto.HWInfo.pci:type_name -> hostmgr_southbound_proto.SystemPCI
	28, // 17: hostmgr_southbound_proto.HWInfo.usb:type_name -> hostmgr_southbound_proto.SystemUSB
	20, // 18: hostmgr_southbound_proto.HWInfo.gpu:type_name -> hostmgr_southbound_proto.SystemGPU
	22, // 19: hostmgr_southbound_proto.SystemCPU.cpu_topology:type_name -> hostmgr_southbound_proto.CPUTopology
	25, // 20: hostmgr_southbound_proto.SystemNetwork.ip_addresses:type_name -> hostmgr_southbound_proto.IPAddress
	23, // 21: hostmgr_southbound_proto.CPUTopology.sockets:type_name -> hostmgr_southbound_proto.Socket
	24, // 22: hostmgr_southbound_proto.Socket.core_groups:type_name -> hostmgr_southbound_proto.CoreGroup
	0,  // 23: hostmgr_southbound_proto.IPAddress.config_mode:type_name -> hostmgr_southbound_proto.ConfigMode
	27, // 24: hostmgr_southbound_proto.SystemUSB.interfaces:type_name -> hostmgr_southbound_proto.Interfaces
	5,  // 25: hostmgr_southbound_proto.BmInfo.bm_type:type_name -> hostmgr_southbound_proto.BmInfo.Bm_type
	30, // 26: hostmgr_southbound_proto.BmInfo.bmc_info:type_name -> hostmgr_southbound_proto.BmcInfo
	6,  // 27: hostmgr_southbound_proto.UpdateHostStatusByHostGuidRequest.host_status:type_name -> hostmgr_southbound_proto.HostStatus
	9,  // 28: hostmgr_southbound_proto.UpdateHostSystemInfoByGUIDRequest.system_info:type_name -> hostmgr_southbound_proto.SystemInfo
	2,  // 29: hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDRequest.instance_status:type_name -> hostmgr_southbound_proto.InstanceStatus
	1,  // 30: hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDRequest.instance_state:type_name -> hostmgr_southbound_proto.InstanceState
	31, // 31: hostmgr_southbound_proto.Hostmgr.UpdateHostStatusByHostGuid:input_type -> hostmgr_southbound_proto.UpdateHostStatusByHostGuidRequest
	34, // 32: hostmgr_southbound_proto.Hostmgr.UpdateInstanceStateStatusByHostGUID:input_type -> hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDRequest
	32, // 33: hostmgr_southbound_proto.Hostmgr.UpdateHostSystemInfoByGUID:input_type -> hostmgr_southbound_proto.UpdateHostSystemInfoByGUIDRequest
	7,  // 34: hostmgr_southbound_proto.Hostmgr.UpdateHostStatusByHostGuid:output_type -> hostmgr_southbound_proto.HostStatusResp
	35, // 35: hostmgr_southbound_proto.Hostmgr.UpdateInstanceStateStatusByHostGUID:output_type -> hostmgr_southbound_proto.UpdateInstanceStateStatusByHostGUIDResponse
	33, // 36: hostmgr_southbound_proto.Hostmgr.UpdateHostSystemInfoByGUID:output_type -> hostmgr_southbound_proto.UpdateHostSystemInfoByGUIDResponse
	34, // [34:37] is the sub-list for method output_type
	31, // [31:34] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_hostmgr_proto_hostmgr_southbound_proto_init() }
func file_hostmgr_proto_hostmgr_southbound_proto_init() {
	if File_hostmgr_proto_hostmgr_southbound_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiosInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsKernel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemDisk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemGPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUTopology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Socket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemPCI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interfaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemUSB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BmcInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostStatusByHostGuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostSystemInfoByGUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostSystemInfoByGUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceStateStatusByHostGUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostmgr_proto_hostmgr_southbound_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceStateStatusByHostGUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hostmgr_proto_hostmgr_southbound_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostmgr_proto_hostmgr_southbound_proto_goTypes,
		DependencyIndexes: file_hostmgr_proto_hostmgr_southbound_proto_depIdxs,
		EnumInfos:         file_hostmgr_proto_hostmgr_southbound_proto_enumTypes,
		MessageInfos:      file_hostmgr_proto_hostmgr_southbound_proto_msgTypes,
	}.Build()
	File_hostmgr_proto_hostmgr_southbound_proto = out.File
	file_hostmgr_proto_hostmgr_southbound_proto_rawDesc = nil
	file_hostmgr_proto_hostmgr_southbound_proto_goTypes = nil
	file_hostmgr_proto_hostmgr_southbound_proto_depIdxs = nil
}
