// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: maintmgr/v1/maintmgr.proto

package maintmgrv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStatus_StatusType int32

const (
	UpdateStatus_STATUS_TYPE_UNSPECIFIED UpdateStatus_StatusType = 0 // Default value, status not specified
	UpdateStatus_STATUS_TYPE_UP_TO_DATE  UpdateStatus_StatusType = 1 // Status when EN is not performing any update related actions.
	UpdateStatus_STATUS_TYPE_STARTED     UpdateStatus_StatusType = 2 // Status when the update process of EN has started
	UpdateStatus_STATUS_TYPE_UPDATED     UpdateStatus_StatusType = 3 // Status when the EN update is completed succesfully
	UpdateStatus_STATUS_TYPE_FAILED      UpdateStatus_StatusType = 4 // Status when the EN update fails; a detailed log is also sent
	UpdateStatus_STATUS_TYPE_DOWNLOADING UpdateStatus_StatusType = 5 // Status when the EN is downloading update artifacts
	UpdateStatus_STATUS_TYPE_DOWNLOADED  UpdateStatus_StatusType = 6 // Status when the EN completes downloading update artifacts
)

// Enum value maps for UpdateStatus_StatusType.
var (
	UpdateStatus_StatusType_name = map[int32]string{
		0: "STATUS_TYPE_UNSPECIFIED",
		1: "STATUS_TYPE_UP_TO_DATE",
		2: "STATUS_TYPE_STARTED",
		3: "STATUS_TYPE_UPDATED",
		4: "STATUS_TYPE_FAILED",
		5: "STATUS_TYPE_DOWNLOADING",
		6: "STATUS_TYPE_DOWNLOADED",
	}
	UpdateStatus_StatusType_value = map[string]int32{
		"STATUS_TYPE_UNSPECIFIED": 0,
		"STATUS_TYPE_UP_TO_DATE":  1,
		"STATUS_TYPE_STARTED":     2,
		"STATUS_TYPE_UPDATED":     3,
		"STATUS_TYPE_FAILED":      4,
		"STATUS_TYPE_DOWNLOADING": 5,
		"STATUS_TYPE_DOWNLOADED":  6,
	}
)

func (x UpdateStatus_StatusType) Enum() *UpdateStatus_StatusType {
	p := new(UpdateStatus_StatusType)
	*p = x
	return p
}

func (x UpdateStatus_StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStatus_StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_maintmgr_v1_maintmgr_proto_enumTypes[0].Descriptor()
}

func (UpdateStatus_StatusType) Type() protoreflect.EnumType {
	return &file_maintmgr_v1_maintmgr_proto_enumTypes[0]
}

func (x UpdateStatus_StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStatus_StatusType.Descriptor instead.
func (UpdateStatus_StatusType) EnumDescriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{0, 0}
}

type PlatformUpdateStatusResponse_OSType int32

const (
	PlatformUpdateStatusResponse_OS_TYPE_UNSPECIFIED PlatformUpdateStatusResponse_OSType = 0
	PlatformUpdateStatusResponse_OS_TYPE_MUTABLE     PlatformUpdateStatusResponse_OSType = 1
	PlatformUpdateStatusResponse_OS_TYPE_IMMUTABLE   PlatformUpdateStatusResponse_OSType = 2
)

// Enum value maps for PlatformUpdateStatusResponse_OSType.
var (
	PlatformUpdateStatusResponse_OSType_name = map[int32]string{
		0: "OS_TYPE_UNSPECIFIED",
		1: "OS_TYPE_MUTABLE",
		2: "OS_TYPE_IMMUTABLE",
	}
	PlatformUpdateStatusResponse_OSType_value = map[string]int32{
		"OS_TYPE_UNSPECIFIED": 0,
		"OS_TYPE_MUTABLE":     1,
		"OS_TYPE_IMMUTABLE":   2,
	}
)

func (x PlatformUpdateStatusResponse_OSType) Enum() *PlatformUpdateStatusResponse_OSType {
	p := new(PlatformUpdateStatusResponse_OSType)
	*p = x
	return p
}

func (x PlatformUpdateStatusResponse_OSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformUpdateStatusResponse_OSType) Descriptor() protoreflect.EnumDescriptor {
	return file_maintmgr_v1_maintmgr_proto_enumTypes[1].Descriptor()
}

func (PlatformUpdateStatusResponse_OSType) Type() protoreflect.EnumType {
	return &file_maintmgr_v1_maintmgr_proto_enumTypes[1]
}

func (x PlatformUpdateStatusResponse_OSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformUpdateStatusResponse_OSType.Descriptor instead.
func (PlatformUpdateStatusResponse_OSType) EnumDescriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{5, 0}
}

type UpdateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusType         UpdateStatus_StatusType `protobuf:"varint,1,opt,name=status_type,json=statusType,proto3,enum=maintmgr.v1.UpdateStatus_StatusType" json:"status_type,omitempty"`
	StatusDetail       string                  `protobuf:"bytes,2,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`
	ProfileName        string                  `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	ProfileVersion     string                  `protobuf:"bytes,4,opt,name=profile_version,json=profileVersion,proto3" json:"profile_version,omitempty"`
	OsImageId          string                  `protobuf:"bytes,5,opt,name=os_image_id,json=osImageId,proto3" json:"os_image_id,omitempty"`
	OsUpdatesAvailable string                  `protobuf:"bytes,6,opt,name=os_updates_available,json=osUpdatesAvailable,proto3" json:"os_updates_available,omitempty"`
}

func (x *UpdateStatus) Reset() {
	*x = UpdateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus) ProtoMessage() {}

func (x *UpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus.ProtoReflect.Descriptor instead.
func (*UpdateStatus) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStatus) GetStatusType() UpdateStatus_StatusType {
	if x != nil {
		return x.StatusType
	}
	return UpdateStatus_STATUS_TYPE_UNSPECIFIED
}

func (x *UpdateStatus) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *UpdateStatus) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *UpdateStatus) GetProfileVersion() string {
	if x != nil {
		return x.ProfileVersion
	}
	return ""
}

func (x *UpdateStatus) GetOsImageId() string {
	if x != nil {
		return x.OsImageId
	}
	return ""
}

func (x *UpdateStatus) GetOsUpdatesAvailable() string {
	if x != nil {
		return x.OsUpdatesAvailable
	}
	return ""
}

type PlatformUpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostGuid     string        `protobuf:"bytes,1,opt,name=host_guid,json=hostGuid,proto3" json:"host_guid,omitempty"`
	UpdateStatus *UpdateStatus `protobuf:"bytes,2,opt,name=update_status,json=updateStatus,proto3" json:"update_status,omitempty"`
}

func (x *PlatformUpdateStatusRequest) Reset() {
	*x = PlatformUpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformUpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformUpdateStatusRequest) ProtoMessage() {}

func (x *PlatformUpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformUpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*PlatformUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{1}
}

func (x *PlatformUpdateStatusRequest) GetHostGuid() string {
	if x != nil {
		return x.HostGuid
	}
	return ""
}

func (x *PlatformUpdateStatusRequest) GetUpdateStatus() *UpdateStatus {
	if x != nil {
		return x.UpdateStatus
	}
	return nil
}

type SingleSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartSeconds uint64 `protobuf:"varint,1,opt,name=start_seconds,json=startSeconds,proto3" json:"start_seconds,omitempty"` // start of one-time schedule (required)
	EndSeconds   uint64 `protobuf:"varint,2,opt,name=end_seconds,json=endSeconds,proto3" json:"end_seconds,omitempty"`       // end of one-time schedule (optional)
}

func (x *SingleSchedule) Reset() {
	*x = SingleSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleSchedule) ProtoMessage() {}

func (x *SingleSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleSchedule.ProtoReflect.Descriptor instead.
func (*SingleSchedule) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{2}
}

func (x *SingleSchedule) GetStartSeconds() uint64 {
	if x != nil {
		return x.StartSeconds
	}
	return 0
}

func (x *SingleSchedule) GetEndSeconds() uint64 {
	if x != nil {
		return x.EndSeconds
	}
	return 0
}

type RepeatedSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DurationSeconds uint32 `protobuf:"varint,1,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // between 1 second and 86400 seconds (24 hours worth of seconds)
	CronMinutes     string `protobuf:"bytes,2,opt,name=cron_minutes,json=cronMinutes,proto3" json:"cron_minutes,omitempty"`              // cron style minutes (0-59)
	CronHours       string `protobuf:"bytes,3,opt,name=cron_hours,json=cronHours,proto3" json:"cron_hours,omitempty"`                    // cron style hours (0-23)
	CronDayMonth    string `protobuf:"bytes,4,opt,name=cron_day_month,json=cronDayMonth,proto3" json:"cron_day_month,omitempty"`         // cron style day of month (0-31)
	CronMonth       string `protobuf:"bytes,5,opt,name=cron_month,json=cronMonth,proto3" json:"cron_month,omitempty"`                    // cron style month (1-12)
	CronDayWeek     string `protobuf:"bytes,6,opt,name=cron_day_week,json=cronDayWeek,proto3" json:"cron_day_week,omitempty"`            // cron style day of week (0-6)
}

func (x *RepeatedSchedule) Reset() {
	*x = RepeatedSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedSchedule) ProtoMessage() {}

func (x *RepeatedSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedSchedule.ProtoReflect.Descriptor instead.
func (*RepeatedSchedule) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{3}
}

func (x *RepeatedSchedule) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *RepeatedSchedule) GetCronMinutes() string {
	if x != nil {
		return x.CronMinutes
	}
	return ""
}

func (x *RepeatedSchedule) GetCronHours() string {
	if x != nil {
		return x.CronHours
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayMonth() string {
	if x != nil {
		return x.CronDayMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronMonth() string {
	if x != nil {
		return x.CronMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayWeek() string {
	if x != nil {
		return x.CronDayWeek
	}
	return ""
}

type UpdateSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleSchedule *SingleSchedule `protobuf:"bytes,1,opt,name=single_schedule,json=singleSchedule,proto3" json:"single_schedule,omitempty"`
	// Deprecated: Marked as deprecated in maintmgr/v1/maintmgr.proto.
	RepeatedSchedule  *RepeatedSchedule   `protobuf:"bytes,2,opt,name=repeated_schedule,json=repeatedSchedule,proto3" json:"repeated_schedule,omitempty"`
	RepeatedSchedules []*RepeatedSchedule `protobuf:"bytes,3,rep,name=repeated_schedules,json=repeatedSchedules,proto3" json:"repeated_schedules,omitempty"` // provide a list of repeated schedules to PUA.
}

func (x *UpdateSchedule) Reset() {
	*x = UpdateSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchedule) ProtoMessage() {}

func (x *UpdateSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchedule.ProtoReflect.Descriptor instead.
func (*UpdateSchedule) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSchedule) GetSingleSchedule() *SingleSchedule {
	if x != nil {
		return x.SingleSchedule
	}
	return nil
}

// Deprecated: Marked as deprecated in maintmgr/v1/maintmgr.proto.
func (x *UpdateSchedule) GetRepeatedSchedule() *RepeatedSchedule {
	if x != nil {
		return x.RepeatedSchedule
	}
	return nil
}

func (x *UpdateSchedule) GetRepeatedSchedules() []*RepeatedSchedule {
	if x != nil {
		return x.RepeatedSchedules
	}
	return nil
}

type PlatformUpdateStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateSource          *UpdateSource                       `protobuf:"bytes,1,opt,name=update_source,json=updateSource,proto3" json:"update_source,omitempty"`
	UpdateSchedule        *UpdateSchedule                     `protobuf:"bytes,2,opt,name=update_schedule,json=updateSchedule,proto3" json:"update_schedule,omitempty"`
	InstalledPackages     string                              `protobuf:"bytes,3,opt,name=installed_packages,json=installedPackages,proto3" json:"installed_packages,omitempty"` // Freeform text, OS-dependent. A list of package names, one per line (newline separated). Should not contain version info.
	OsType                PlatformUpdateStatusResponse_OSType `protobuf:"varint,4,opt,name=os_type,json=osType,proto3,enum=maintmgr.v1.PlatformUpdateStatusResponse_OSType" json:"os_type,omitempty"`
	OsProfileUpdateSource *OSProfileUpdateSource              `protobuf:"bytes,5,opt,name=os_profile_update_source,json=osProfileUpdateSource,proto3" json:"os_profile_update_source,omitempty"`
}

func (x *PlatformUpdateStatusResponse) Reset() {
	*x = PlatformUpdateStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformUpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformUpdateStatusResponse) ProtoMessage() {}

func (x *PlatformUpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformUpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*PlatformUpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{5}
}

func (x *PlatformUpdateStatusResponse) GetUpdateSource() *UpdateSource {
	if x != nil {
		return x.UpdateSource
	}
	return nil
}

func (x *PlatformUpdateStatusResponse) GetUpdateSchedule() *UpdateSchedule {
	if x != nil {
		return x.UpdateSchedule
	}
	return nil
}

func (x *PlatformUpdateStatusResponse) GetInstalledPackages() string {
	if x != nil {
		return x.InstalledPackages
	}
	return ""
}

func (x *PlatformUpdateStatusResponse) GetOsType() PlatformUpdateStatusResponse_OSType {
	if x != nil {
		return x.OsType
	}
	return PlatformUpdateStatusResponse_OS_TYPE_UNSPECIFIED
}

func (x *PlatformUpdateStatusResponse) GetOsProfileUpdateSource() *OSProfileUpdateSource {
	if x != nil {
		return x.OsProfileUpdateSource
	}
	return nil
}

type UpdateSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelCommand string `protobuf:"bytes,1,opt,name=kernel_command,json=kernelCommand,proto3" json:"kernel_command,omitempty"` // Kernel command line
	// Deprecated: Marked as deprecated in maintmgr/v1/maintmgr.proto.
	OsRepoUrl   string   `protobuf:"bytes,2,opt,name=os_repo_url,json=osRepoUrl,proto3" json:"os_repo_url,omitempty"`     // 'DEB822 Source Format' url to the public repository, deprecated in 24.11
	CustomRepos []string `protobuf:"bytes,3,rep,name=custom_repos,json=customRepos,proto3" json:"custom_repos,omitempty"` // 'DEB822 Source Format' entries for Debian style OSs
}

func (x *UpdateSource) Reset() {
	*x = UpdateSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSource) ProtoMessage() {}

func (x *UpdateSource) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSource.ProtoReflect.Descriptor instead.
func (*UpdateSource) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSource) GetKernelCommand() string {
	if x != nil {
		return x.KernelCommand
	}
	return ""
}

// Deprecated: Marked as deprecated in maintmgr/v1/maintmgr.proto.
func (x *UpdateSource) GetOsRepoUrl() string {
	if x != nil {
		return x.OsRepoUrl
	}
	return ""
}

func (x *UpdateSource) GetCustomRepos() []string {
	if x != nil {
		return x.CustomRepos
	}
	return nil
}

type OSProfileUpdateSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsImageUrl     string `protobuf:"bytes,1,opt,name=os_image_url,json=osImageUrl,proto3" json:"os_image_url,omitempty"`           // URL that PUA will use to download the immutable OS image file
	OsImageId      string `protobuf:"bytes,2,opt,name=os_image_id,json=osImageId,proto3" json:"os_image_id,omitempty"`              // Identifier (e.g., version) of the image to be used by PUA to verify if it can use the OS image for EN update
	OsImageSha     string `protobuf:"bytes,3,opt,name=os_image_sha,json=osImageSha,proto3" json:"os_image_sha,omitempty"`           // Version of the image to be used by PUA to verify if it can use the OS image for EN update
	ProfileName    string `protobuf:"bytes,4,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`          // Describes the OS profile name used by EN
	ProfileVersion string `protobuf:"bytes,5,opt,name=profile_version,json=profileVersion,proto3" json:"profile_version,omitempty"` // Describes the OS profile version used by EN
}

func (x *OSProfileUpdateSource) Reset() {
	*x = OSProfileUpdateSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSProfileUpdateSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSProfileUpdateSource) ProtoMessage() {}

func (x *OSProfileUpdateSource) ProtoReflect() protoreflect.Message {
	mi := &file_maintmgr_v1_maintmgr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSProfileUpdateSource.ProtoReflect.Descriptor instead.
func (*OSProfileUpdateSource) Descriptor() ([]byte, []int) {
	return file_maintmgr_v1_maintmgr_proto_rawDescGZIP(), []int{7}
}

func (x *OSProfileUpdateSource) GetOsImageUrl() string {
	if x != nil {
		return x.OsImageUrl
	}
	return ""
}

func (x *OSProfileUpdateSource) GetOsImageId() string {
	if x != nil {
		return x.OsImageId
	}
	return ""
}

func (x *OSProfileUpdateSource) GetOsImageSha() string {
	if x != nil {
		return x.OsImageSha
	}
	return ""
}

func (x *OSProfileUpdateSource) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *OSProfileUpdateSource) GetProfileVersion() string {
	if x != nil {
		return x.ProfileVersion
	}
	return ""
}

var File_maintmgr_v1_maintmgr_proto protoreflect.FileDescriptor

var file_maintmgr_v1_maintmgr_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe3, 0x03, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x6f,
	0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6f,
	0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xc8, 0x01,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x54, 0x4f, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x4c, 0x4f, 0x41, 0x44, 0x45, 0x44, 0x10, 0x06, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x28, 0x24, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x98, 0x04, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x2a, 0x08, 0x18, 0x80, 0xa3, 0x05, 0x28, 0x01, 0x40,
	0x01, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x60, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3d, 0xfa, 0x42, 0x3a, 0x72, 0x38, 0x32,
	0x36, 0x5e, 0x28, 0x5b, 0x2a, 0x5d, 0x7c, 0x28, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x5b,
	0x31, 0x2d, 0x35, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x29, 0x28, 0x28, 0x2c, 0x28, 0x5b,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x5b, 0x31, 0x2d, 0x35, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x29, 0x29, 0x2a, 0x29, 0x29, 0x24, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0xfa, 0x42, 0x3c, 0x72, 0x3a, 0x32,
	0x38, 0x5e, 0x28, 0x5b, 0x2a, 0x5d, 0x7c, 0x28, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x33, 0x5d, 0x29, 0x28, 0x28, 0x2c, 0x28,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x32, 0x5b, 0x30,
	0x2d, 0x33, 0x5d, 0x29, 0x29, 0x2a, 0x29, 0x29, 0x24, 0x52, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42,
	0x44, 0x72, 0x42, 0x32, 0x40, 0x5e, 0x28, 0x5b, 0x2a, 0x5d, 0x7c, 0x28, 0x5b, 0x31, 0x2d, 0x39,
	0x5d, 0x7c, 0x28, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x33, 0x5b,
	0x30, 0x31, 0x5d, 0x29, 0x28, 0x28, 0x2c, 0x28, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x5b,
	0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29,
	0x29, 0x2a, 0x29, 0x29, 0x24, 0x52, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x50, 0x0a, 0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xfa, 0x42, 0x2e, 0x72, 0x2c, 0x32, 0x2a,
	0x5e, 0x28, 0x5b, 0x2a, 0x5d, 0x7c, 0x28, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30,
	0x31, 0x32, 0x5d, 0x29, 0x28, 0x28, 0x2c, 0x28, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b,
	0x30, 0x31, 0x32, 0x5d, 0x29, 0x29, 0x2a, 0x29, 0x29, 0x24, 0x52, 0x09, 0x63, 0x72, 0x6f, 0x6e,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x79, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xfa, 0x42,
	0x20, 0x72, 0x1e, 0x32, 0x1c, 0x5e, 0x28, 0x5b, 0x2a, 0x5d, 0x7c, 0x28, 0x5b, 0x30, 0x2d, 0x36,
	0x5d, 0x29, 0x28, 0x28, 0x2c, 0x28, 0x5b, 0x30, 0x2d, 0x36, 0x5d, 0x29, 0x29, 0x2a, 0x29, 0x29,
	0x24, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x22, 0xf4,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xd4, 0x03, 0x0a, 0x1c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x44, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4f, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x5b, 0x0a, 0x18, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x15, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x4d, 0x0a,
	0x06, 0x4f, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x53, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4d, 0x4d, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x7c, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x6f, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x15, 0x4f,
	0x53, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x73, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x73, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x73, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x73,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x32, 0x80, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x6d, 0x67, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x6d, 0x67, 0x72,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_maintmgr_v1_maintmgr_proto_rawDescOnce sync.Once
	file_maintmgr_v1_maintmgr_proto_rawDescData = file_maintmgr_v1_maintmgr_proto_rawDesc
)

func file_maintmgr_v1_maintmgr_proto_rawDescGZIP() []byte {
	file_maintmgr_v1_maintmgr_proto_rawDescOnce.Do(func() {
		file_maintmgr_v1_maintmgr_proto_rawDescData = protoimpl.X.CompressGZIP(file_maintmgr_v1_maintmgr_proto_rawDescData)
	})
	return file_maintmgr_v1_maintmgr_proto_rawDescData
}

var file_maintmgr_v1_maintmgr_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_maintmgr_v1_maintmgr_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_maintmgr_v1_maintmgr_proto_goTypes = []interface{}{
	(UpdateStatus_StatusType)(0),             // 0: maintmgr.v1.UpdateStatus.StatusType
	(PlatformUpdateStatusResponse_OSType)(0), // 1: maintmgr.v1.PlatformUpdateStatusResponse.OSType
	(*UpdateStatus)(nil),                     // 2: maintmgr.v1.UpdateStatus
	(*PlatformUpdateStatusRequest)(nil),      // 3: maintmgr.v1.PlatformUpdateStatusRequest
	(*SingleSchedule)(nil),                   // 4: maintmgr.v1.SingleSchedule
	(*RepeatedSchedule)(nil),                 // 5: maintmgr.v1.RepeatedSchedule
	(*UpdateSchedule)(nil),                   // 6: maintmgr.v1.UpdateSchedule
	(*PlatformUpdateStatusResponse)(nil),     // 7: maintmgr.v1.PlatformUpdateStatusResponse
	(*UpdateSource)(nil),                     // 8: maintmgr.v1.UpdateSource
	(*OSProfileUpdateSource)(nil),            // 9: maintmgr.v1.OSProfileUpdateSource
}
var file_maintmgr_v1_maintmgr_proto_depIdxs = []int32{
	0,  // 0: maintmgr.v1.UpdateStatus.status_type:type_name -> maintmgr.v1.UpdateStatus.StatusType
	2,  // 1: maintmgr.v1.PlatformUpdateStatusRequest.update_status:type_name -> maintmgr.v1.UpdateStatus
	4,  // 2: maintmgr.v1.UpdateSchedule.single_schedule:type_name -> maintmgr.v1.SingleSchedule
	5,  // 3: maintmgr.v1.UpdateSchedule.repeated_schedule:type_name -> maintmgr.v1.RepeatedSchedule
	5,  // 4: maintmgr.v1.UpdateSchedule.repeated_schedules:type_name -> maintmgr.v1.RepeatedSchedule
	8,  // 5: maintmgr.v1.PlatformUpdateStatusResponse.update_source:type_name -> maintmgr.v1.UpdateSource
	6,  // 6: maintmgr.v1.PlatformUpdateStatusResponse.update_schedule:type_name -> maintmgr.v1.UpdateSchedule
	1,  // 7: maintmgr.v1.PlatformUpdateStatusResponse.os_type:type_name -> maintmgr.v1.PlatformUpdateStatusResponse.OSType
	9,  // 8: maintmgr.v1.PlatformUpdateStatusResponse.os_profile_update_source:type_name -> maintmgr.v1.OSProfileUpdateSource
	3,  // 9: maintmgr.v1.MaintmgrService.PlatformUpdateStatus:input_type -> maintmgr.v1.PlatformUpdateStatusRequest
	7,  // 10: maintmgr.v1.MaintmgrService.PlatformUpdateStatus:output_type -> maintmgr.v1.PlatformUpdateStatusResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_maintmgr_v1_maintmgr_proto_init() }
func file_maintmgr_v1_maintmgr_proto_init() {
	if File_maintmgr_v1_maintmgr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_maintmgr_v1_maintmgr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformUpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformUpdateStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maintmgr_v1_maintmgr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSProfileUpdateSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_maintmgr_v1_maintmgr_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_maintmgr_v1_maintmgr_proto_goTypes,
		DependencyIndexes: file_maintmgr_v1_maintmgr_proto_depIdxs,
		EnumInfos:         file_maintmgr_v1_maintmgr_proto_enumTypes,
		MessageInfos:      file_maintmgr_v1_maintmgr_proto_msgTypes,
	}.Build()
	File_maintmgr_v1_maintmgr_proto = out.File
	file_maintmgr_v1_maintmgr_proto_rawDesc = nil
	file_maintmgr_v1_maintmgr_proto_goTypes = nil
	file_maintmgr_v1_maintmgr_proto_depIdxs = nil
}
